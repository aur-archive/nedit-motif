--- nedit-5.5/util/misc.c.orig	2014-02-27 11:51:17.800450741 +0100
+++ nedit-5.5/util/misc.c	2014-02-27 11:53:24.829043955 +0100
@@ -153,6 +153,10 @@
 	Cardinal *nArgs);
 static long queryDesktop(Display *display, Window window, Atom deskTopAtom);
 
+void WmClientMsg(Display *disp, Window win, const char *msg,
+        unsigned long data0, unsigned long data1,
+        unsigned long data2, unsigned long data3,
+        unsigned long data4);
 /*
 ** Set up closeCB to be called when the user selects close from the
 ** window menu.  The close menu item usually activates f.kill which
@@ -853,6 +857,7 @@
     if (winAttr.map_state == IsViewable)
         XSetInputFocus(display, w, RevertToParent, CurrentTime);	
 
+    WmClientMsg(display, w, "_NET_ACTIVE_WINDOW", 0, 0, 0, 0, 0);
     XMapRaised(display, w);
 }
 
@@ -2274,3 +2279,32 @@
 
     return -1;  /* No desktop information */
 }
+
+/*
+** Send a client message to a EWMH/NetWM compatible X Window Manager.
+** Code taken from wmctrl-1.07 (GPL licensed)
+*/
+void WmClientMsg(Display *disp, Window win, const char *msg,
+        unsigned long data0, unsigned long data1,
+        unsigned long data2, unsigned long data3,
+        unsigned long data4)
+{
+    XEvent event;
+    long mask = SubstructureRedirectMask | SubstructureNotifyMask;
+
+    event.xclient.type = ClientMessage;
+    event.xclient.serial = 0;
+    event.xclient.send_event = True;
+    event.xclient.message_type = XInternAtom(disp, msg, False);
+    event.xclient.window = win;
+    event.xclient.format = 32;
+    event.xclient.data.l[0] = data0;
+    event.xclient.data.l[1] = data1;
+    event.xclient.data.l[2] = data2;
+    event.xclient.data.l[3] = data3;
+    event.xclient.data.l[4] = data4;
+
+    if (!XSendEvent(disp, DefaultRootWindow(disp), False, mask, &event)) {
+        fprintf(stderr, "nedit: cannot send %s EWMH event.\n", msg);
+    }
+}
--- nedit-5.5/util/misc.c.orig	2007-12-03 21:57:15.000000000 +0000
+++ nedit-5.5/util/misc.c	2007-12-03 21:59:30.000000000 +0000
@@ -475,6 +475,15 @@
     bestClass = 0;
     bestVisual = 0;
     for (i=0; i < nVis; i++) {
+        if (visList[i].depth >= 32 &&          
+           strstr(ServerVendor(display), "X.Org") != 0) {
+               /* Xorg 6.8.* 32-bit visuals (with alpha-channel) cause a lot
+                  of problems, so we have to skip them.
+                  Users can achieve the same effect with older versions of
+                  NEdit by setting the environment variable 
+                  XLIB_SKIP_ARGB_VISUALS. */
+            continue;
+        }
 	if (visList[i].depth > maxDepth) {
 	    maxDepth = visList[i].depth;
 	    bestClass = 0;
